apiVersion: testsys.system/v1
kind: Resource
metadata:
  name: ${CLUSTER_NAME}
  namespace: testsys
spec:
  agent:
    name: ecs-provider
    image: ${ECS_RESOURCE_AGENT_IMAGE_URI}
    keepRunning: true
    configuration:
      clusterName: ${CLUSTER_NAME}
      region: ${AWS_REGION}
      assumeRole: ${ASSUME_ROLE}
  dependsOn: []
  destructionPolicy: onDeletion
---
apiVersion: testsys.system/v1
kind: Resource
metadata:
  name: ${CLUSTER_NAME}-instances
  namespace: testsys
spec:
  agent:
    name: ec2-provider
    image: ${EC2_RESOURCE_AGENT_IMAGE_URI}
    keepRunning: true
    configuration:
      clusterName: \${${CLUSTER_NAME}.clusterName}
      clusterType: ecs
      instanceCount: 2
      nodeAmi: ${BOTTLEROCKET_AMI_ID}
      region: ${AWS_REGION}
      instanceProfileArn: \${${CLUSTER_NAME}.iamInstanceProfileArn}
      subnetIds: \${${CLUSTER_NAME}.publicSubnetIds}
      instanceTypes: ${INSTANCE_TYPES}
      assumeRole: ${ASSUME_ROLE}
  dependsOn: [${CLUSTER_NAME}]
  destructionPolicy: onDeletion
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: ${CLUSTER_NAME}-test
  namespace: testsys 
spec:
  agent:
    name: ecs-workload-agent
    image: ${ECS_WORKLOAD_AGENT_IMAGE_URI}
    keepRunning: true
    configuration:
      clusterName: \${${CLUSTER_NAME}.clusterName}
      region: \${${CLUSTER_NAME}.region}
      assumeRole: ${ASSUME_ROLE}
      tests:
      - name: ${WORKLOAD_TEST_NAME}
        image: ${WORKLOAD_TEST_IMAGE_URI}
        gpu: ${GPU}
  dependsOn: []
  resources: [${CLUSTER_NAME}-instances, ${CLUSTER_NAME}]
